diff --git a/third_party/llvm/generated.patch b/third_party/llvm/generated.patch
index c153e75..91f928b 100644
--- a/third_party/llvm/generated.patch
+++ b/third_party/llvm/generated.patch
@@ -1,81 +1,24 @@
 Auto generated patch. Do not edit or delete it, even if empty.
-diff -ruN --strip-trailing-cr a/clang/lib/Sema/SemaDecl.cpp b/clang/lib/Sema/SemaDecl.cpp
---- a/clang/lib/Sema/SemaDecl.cpp
-+++ b/clang/lib/Sema/SemaDecl.cpp
-@@ -12230,12 +12230,9 @@
-   //    The main function shall not be declared with a linkage-specification.
-   if (FD->isExternCContext() ||
-       (FD->isExternCXXContext() &&
--       FD->getDeclContext()->getRedeclContext()->isTranslationUnit())) {
-+       FD->getDeclContext()->getRedeclContext()->isTranslationUnit()))
-     Diag(FD->getLocation(), diag::ext_main_invalid_linkage_specification)
-         << FD->getLanguageLinkage();
--    FD->setInvalidDecl();
--    return;
--  }
+diff -ruN --strip-trailing-cr a/llvm/unittests/Analysis/GraphWriterTest.cpp b/llvm/unittests/Analysis/GraphWriterTest.cpp
+--- a/llvm/unittests/Analysis/GraphWriterTest.cpp
++++ b/llvm/unittests/Analysis/GraphWriterTest.cpp
+@@ -12,6 +12,7 @@
+ #include "llvm/IR/Function.h"
+ #include "llvm/IR/LLVMContext.h"
+ #include "llvm/IR/Module.h"
++#include "llvm/Testing/Support/SupportHelpers.h"
+ #include "llvm/Support/SourceMgr.h"
+ #include "llvm/Support/raw_ostream.h"
+ #include "gtest/gtest.h"
+@@ -56,7 +57,10 @@
+ static void writeCFGToDotFile(Function &F, std::string Name,
+                               bool CFGOnly = false) {
+   std::error_code EC;
+-  raw_fd_ostream File(Name + ".dot", EC, sys::fs::OpenFlags::OF_Text);
++  llvm::unittest::TempDir Tmp("tmpdir", /*Unique=*/true);
++  SmallString<128> FileName(Tmp.path().begin(), Tmp.path().end());
++  sys::path::append(FileName, Name + ".dot");
++  raw_fd_ostream File(FileName, EC, sys::fs::OpenFlags::OF_Text);
+ 
+   DOTFuncInfo CFGInfo(&F);
  
-   // C++11 [basic.start.main]p3:
-   //   A program that [...] declares main to be inline, static or
-diff -ruN --strip-trailing-cr a/clang/test/CXX/basic/basic.start/basic.start.main/p3.cpp b/clang/test/CXX/basic/basic.start/basic.start.main/p3.cpp
---- a/clang/test/CXX/basic/basic.start/basic.start.main/p3.cpp
-+++ b/clang/test/CXX/basic/basic.start/basic.start.main/p3.cpp
-@@ -11,6 +11,8 @@
- // RUN: %clang_cc1 -fsyntax-only -verify -pedantic %s -DTEST11
- // RUN: %clang_cc1 -fsyntax-only -verify -pedantic %s -DTEST12
- // RUN: %clang_cc1 -fsyntax-only -verify -pedantic %s -DTEST13
-+// RUN: %clang_cc1 -fsyntax-only -verify -pedantic %s -DTEST14
-+// RUN: %clang_cc1 -triple x86_64-linux -emit-llvm-only -verify -pedantic %s -DTEST15
- 
- #if TEST1
- int main; // expected-error{{main cannot be declared as a variable in the global scope}}
-@@ -78,12 +80,14 @@
- extern "C" struct A { int main(); }; // ok
- 
- namespace c {
--  extern "C" void main(); // expected-warning {{'main' should not be 'extern "C"'}}
-+  extern "C" void main(); // expected-error {{'main' must return 'int'}} \
-+                          // expected-warning {{'main' should not be 'extern "C"'}}
- }
- 
- extern "C" {
-   namespace Z {
--    void main(); // expected-warning {{'main' should not be 'extern "C"'}}
-+    void main(); // expected-error {{'main' must return 'int'}} \
-+                 // expected-warning {{'main' should not be 'extern "C"'}}
-   }
- }
- 
-@@ -102,11 +106,6 @@
-   int main(); // expected-warning {{'main' should not be 'extern "C++"'}}
- }
- 
--extern "C" {
--  int main(); // expected-warning {{'main' should not be 'extern "C"'}}
--}
--
--extern "C" int main(); // expected-warning {{'main' should not be 'extern "C"'}}
- extern "C++" int main(); // expected-warning {{'main' should not be 'extern "C++"'}}
- 
- namespace ns1 {
-@@ -122,6 +121,21 @@
-   extern "C++" void main() {} // ok
- }
- 
-+#elif TEST14
-+extern "C" {
-+  int main(); // expected-warning {{'main' should not be 'extern "C"'}}
-+}
-+
-+extern "C" int main(); // expected-warning {{'main' should not be 'extern "C"'}}
-+
-+#elif TEST15
-+extern "C" __attribute__((visibility("default"))) __attribute__((weak))
-+int main(); // expected-warning {{'main' should not be 'extern "C"'}}
-+
-+unsigned long g() {
-+  return reinterpret_cast<unsigned long>(&main); // expected-warning {{referring to 'main' within an expression is a Clang extension}}
-+}
-+
- #else
- #error Unknown Test
- #endif
diff --git a/third_party/llvm/workspace.bzl b/third_party/llvm/workspace.bzl
index 7c85b2c..7e7417c 100644
--- a/third_party/llvm/workspace.bzl
+++ b/third_party/llvm/workspace.bzl
@@ -4,8 +4,8 @@ load("//third_party:repo.bzl", "tf_http_archive")
 
 def repo(name):
     """Imports LLVM."""
-    LLVM_COMMIT = "60bffe221a1d615ffc7c6b632287d0fbd27ef863"
-    LLVM_SHA256 = "bb1c91362641be1df66db7e67dffb12ec4543f654f8fe888cb8188c8e342886f"
+    LLVM_COMMIT = "f9031f00f2c90bc0af274b45ec3e169b5250a688"
+    LLVM_SHA256 = "695896a5c3b4011043c27a43ac17079ee725e2d72e3b664868f09626a187daf3"
 
     tf_http_archive(
         name = name,
